#:import SlideTransition kivy.uix.screenmanager.SlideTransition


MainThread:
	album_art:album_art
	slider:slider

	canvas.after:
		Color:
			rgba:(1,1,1,root.splash)
		Rectangle:
			pos: self.pos
			size: self.size
			source: 'carputer.jpg'
	AnchorLayout:
		anchor_x: 'center'
		anchor_y: 'center'

		#Main Screens
		ScreenManagement:
			transition: SlideTransition()
			id: st
			size_hint: 1, 0.75

			MusicScreen:
				name: 'music'
				Image:
					id: musicscreenbackground
					source:'data/wallpapers/blackbox.jpg'
					allow_stretch: True
					keep_ratio: False


				Scroller1:
					size_hint: 0.4, 0.915
					id: artistscroller
					ScrollView:
						size_hint: 1,1
						pos_hint:{'x':0,'y':0}
						GridLayout:
							id: scroller1
							height: self.minimum_height
							size_hint_y: None
							cols: 1
							spacing: 0, 0
							padding: 0, 0
				Scroller2:
					size_hint: 0.4, 0.915
					id: albumscroller
					ScrollView:
						pos_hint:{'x':0,'y':0}
						size_hint: 1,1
						GridLayout:
							id: scroller2
							height: self.minimum_height
							size_hint_y: None
							cols: 1
							spacing: 0, 0
							padding: 0, 0

				FloatLayout:
					size_hint: 1, 1
					Image:
						pos_hint:{'x':-0.2,'y':0}
						id: album_art
						source: 'data/icons/unknown.png'
						allow_stretch: True

				BigScreenInfo:
					id: hiddeninfo
					size_hint: 0.455, 0.75
					pos_hint: {"x": -1, 'y': 0.0}
					BoxLayout:
						orientation: 'vertical'

						Label:
							id: bigscreentitle
							font_size: 40
							text_size: self.width , None
							size: self.texture_size
							halign: 'center'

						Label:
							id: bigscreenartist
							size_hint: 1, 0.3
							font_size: self.height/1.7
							text_size: self.size
							halign: 'center'

						Label:
							id: bigscreenalbum
							text_size: self.width , None
							size: self.texture_size
							halign: 'center'
							font_size: 20


      SettingsScreen:
				name: 'settings'
				Button:
					size_hint: 0.05, 0.1
					on_release: print (root.player.get_state())
				Button:
					background_color: 0, 0, 0, 0
					size_hint: 0.05,0.1
					pos_hint: {"x": 0.9, 'y':0.88}
					on_release: app.stop()
					Image:
						source:'data/icons/power.png'
						center_x: self.parent.center_x
						center_y: self.parent.center_y
						size: 80, 80
						allow_stretch: True

			OBDIIScreen:
				name: 'obd'
				BoxLayout:
					Button:
						id: start
						text: "start"
						on_press: root.startusb()
					Button:
						id: latitude
					Button:
						id: longitude
					Button:
						id: time
					Button:
						id: speed
					Button:
						id: satellites





		#Bottom Screen selectors
		Menu:
			AnchorLayout:
				anchor_x: 'center'
				anchor_y: 'bottom'
				BoxLayout:
					orientation: 'horizontal'
					size_hint: 1, .12 #define percentage of screen for quickeys width,height

					Button:  #music button
						on_release: st.current = 'music'
						Image:
							source: 'data/icons/audio.png'
							center_x: self.parent.center_x
							center_y: self.parent.center_y
							size: 60, 60
							allow_stretch: True


					Button:  #settings button
						on_release: st.current = 'settings'
						pos_hint: {"x": 0.8, 'y':0}
						Image:
							source:'data/icons/settings.png'
							center_x: self.parent.center_x
							center_y: self.parent.center_y
							size: 60, 60
							allow_stretch: True

					Button: #OBDII button
						on_release: st.current= 'obd'
						text: "OBDII"



			PlayButtons:
				anchor_x: 'center'
				anchor_y: 'top'
				BoxLayout:
					size_hint: 1, .085
					orientation: 'vertical'
					padding: 7,7,0,0
					BoxLayout:
						orientation: 'horizontal'
						Button:
							id: last_track
							size_hint: 0.055, 1
							on_press: root.back_button()
							background_color:(0.9, 0.9, 0.9, 0.0)
							Image:
								size: last_track.size
								source:'data/icons/back.png'
								x: last_track.x
								y: last_track.y
								allow_stretch: True
								keep_ratio: False
						Button:
							id: playpause
							size_hint: 0.055, 1
							background_color:(0.9, 0.9, 0.9, 0.0)
							on_press: root.playpause()
							Image:
								id: playpausebutton
								size: playpause.size
								source: 'data/icons/play.png'
								x: playpause.x
								y: playpause.y
								allow_stretch: True
								keep_ratio: False
						Button:
							id: next
							size_hint: 0.055, 1
							on_press: root.next_button()
							background_color:(0.9, 0.9, 0.9, 0.0)
							Image:
								size: next.size
								source:'data/icons/forward.png'
								x: next.x
								y: next.y
								allow_stretch: True
								keep_ratio: False
						BoxLayout:
							orientation: 'vertical'
							size_hint: 0.045, 1
							Button:
								background_color:(0.9, 0.9, 0.9, 0.0)
							Button:
								id: shuffle
								on_press: root.shuffleicon()
								background_color:(0.9, 0.9, 0.9, 0.0)
								Image:
									id: shuffleimage
									size: shuffle.size
									source:'data/icons/shuffle_on.png'
									x: shuffle.x
									y: shuffle.y
									allow_stretch: True
									keep_ratio: True

						BoxLayout:
							orientation: 'horizontal'
							Button:
								id: songpos
								text: "0:00"
								size_hint: 0.06,1
								background_color:(0.9, 0.9, 0.9, 0.0)
								font_size: songpos.height/2

							BoxLayout:
								orientation: 'vertical'
								Label:
									id: songinformation
									background_color:(0.5,0.5,0.5,0.5)
									font_size: songinformation.height/2
								Slider:
									id: slider
									size_hint: 1, 0.35
									cursor_size: 20, 20

							Button:
								id: songlength
								size_hint: 0.06,1
								background_color:(0.9, 0.9, 0.9, 0.0)
								text: "--:--"
								font_size: songlength.height/2

			VolumeSlider:
				id: volumecontrol
				size_hint: .05 , 0.78
				pos_hint: {"x": 0.95, 'y':0.11}
				orientation: 'vertical'
				Label:
					font_size: 20
					size_hint: 1, 0.05
					text: str(int(volumeslider.value))
					background_color:(1,1,1,0)
				Slider:
					cursor_size: 20, 20
					value: root.volstartup()
					orientation: 'vertical'
					id: volumeslider
					on_value: root.volslider(self.value)
